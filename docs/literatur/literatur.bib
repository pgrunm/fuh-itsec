@article{barbu2015defense,
  title={Defense in depth principle to ensure information security},
  author={Barbu, Ionut-Daniel and Petrica, Gabriel},
  journal={Int'l J. Info. Sec. \& Cybercrime},
  volume={4},
  pages={41},
  year={2015},
  publisher={HeinOnline}
}

@article{hutchinsIntelligenceDrivenComputerNetwork,
  title = {Intelligence-{{Driven Computer Network Defense Informed}} by {{Analysis}} of {{Adversary Campaigns}} and {{Intrusion Kill Chains}}},
  author = {Hutchins, Eric M and Cloppert, Michael J and Amin, Rohan M},
  abstract = {Conventional network defense tools such as intrusion detection systems and anti-virus focus on the vulnerability component of risk, and traditional incident response methodology presupposes a successful intrusion. An evolution in the goals and sophistication of computer network intrusions has rendered these approaches insufficient for certain actors. A new class of threats, appropriately dubbed the “Advanced Persistent Threat” (APT), represents well-resourced and trained adversaries that conduct multi-year intrusion campaigns targeting highly sensitive economic, proprietary, or national security information. These adversaries accomplish their goals using advanced tools and techniques designed to defeat most conventional computer network defense mechanisms. Network defense techniques which leverage knowledge about these adversaries can create an intelligence feedback loop, enabling defenders to establish a state of information superiority which decreases the adversary’s likelihood of success with each subsequent intrusion attempt. Using a kill chain model to describe phases of intrusions, mapping adversary kill chain indicators to defender courses of action, identifying patterns that link individual intrusions into broader campaigns, and understanding the iterative nature of intelligence gathering form the basis of intelligence-driven computer network defense (CND). Institutionalization of this approach reduces the likelihood of adversary success, informs network defense investment and resource prioritization, and yields relevant metrics of performance and effectiveness. The evolution of advanced persistent threats necessitates an intelligence-based model because in this model the defenders mitigate not just vulnerability, but the threat component of risk, too.},
  langid = {english},
  file = {/run/media/pascal/Daten/Daten/Studium/Master/Literatur/storage/BUITXLMZ/Hutchins et al. - Intelligence-Driven Computer Network Defense Infor.pdf}
}

@article{bsi,
  title={Technische Richtlinie TR-02102-2, Kryptographische Verfahren: Empfehlungen und Schl{\"u}ssell{\"a}ngen},
  author={Bundesamt für Sicherheit in der Informationstechnik},
  journal={Report, Bundesamt f{\"u}r Sicherheit in der Informationstechnik (BSI)},
  year={2023},
  url={https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Publikationen/TechnischeRichtlinien/TR02102/BSI-TR-02102-2.pdf?__blob=publicationFile&v=6}
}

@online{OverviewDevSecBaselines,
  title = {Overview {{DevSec Baselines}} – {{DevSec Hardening Framework}}},
  url = {https://dev-sec.io/baselines/},
  urldate = {2023-06-12},
  author ={DevSec Hardening Framework Team}
}

@reference{Grundschutz,
  title = {IT-Grundschutz-Kompendium},
  url = {https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Grundschutz/Kompendium/IT_Grundschutz_Kompendium_Edition2023.pdf},
  urldate = {2023-06-26},
  author ={Bundesamt für Sicherheit in der Informationstechnik}
}


@misc{Danblack_answer_2022,
	title = {Answer to "{Mariadb} in {Docker}: {MariaDB} {Connector}/{Python} requires {MariaDB} {Connector}/{C} {\textgreater}= 3.2.4, found version 3.1.16"},
	shorttitle = {Answer to "{Mariadb} in {Docker}},
	url = {https://stackoverflow.com/a/74452637},
	urldate = {2023-06-27},
	journal = {Stack Overflow},
	author = {{Danblack}},
	month = nov,
	year = {2022},
}

@misc{turner-trauring_multi-stage_2019,
	title = {Multi-stage builds \#2: {Python} specifics},
	shorttitle = {Multi-stage builds \#2},
	url = {https://pythonspeed.com/articles/multi-stage-docker-python/},
	abstract = {Once you understand generic Docker multi-stage builds, here’s how to implement them for Python applications, with virtualenvs or user installs.},
	language = {en-us},
	urldate = {2023-06-27},
	journal = {Python⇒Speed},
	author = {Turner-Trauring, Itamar},
	month = mar,
	year = {2019},
}
